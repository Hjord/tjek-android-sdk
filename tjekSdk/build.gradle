apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'realm-android'

buildscript {
    // Custom buildscript closure for SDK module, to allow compilation from other projects
    repositories {
        gradlePluginPortal()
    }
}

repositories {
    mavenCentral()
    google()
    maven { url "https://jitpack.io" }
}

def tjekSdkVersion = '"6.0.0"'

android {

    compileSdkVersion 31

    compileOptions {
        // Flag to enable support for the new language APIs (For AGP 4.1+)
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    kapt {
        correctErrorTypes = true
    }

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        buildConfigField("String", "TJEK_SDK_VERSION", "${tjekSdkVersion}")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/database_schema".toString()]
            }
        }
        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/database_schema".toString())
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'tjek_sdk_proguard_rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
}

dependencies {

    // Needed to use the new java.time classes
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    // https://github.com/Digidemic/UnitOf
    implementation files('libs/UnitOf.jar')

    // retrofit
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    // okhttp log interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    // moshi
    def moshiVersion = '1.13.0'
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"

    // androidX
    implementation "androidx.appcompat:appcompat:1.4.2"
    implementation "androidx.startup:startup-runtime:1.1.1"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // room
    def roomVersion = '2.4.3'
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Other libs
    implementation "io.github.everythingme:overscroll-decor-android:1.1.1"
    implementation "com.github.drfonfon:android-geohash:0.22"
    implementation "com.github.bumptech.glide:glide:4.13.2"

    // Test
    testImplementation "androidx.test.ext:junit:1.1.3"
    testImplementation "org.robolectric:robolectric:4.6.1"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.shopgun'
                artifactId = 'shopgun-android-sdk'
                version = '5.0.1'
            }
        }
    }
}